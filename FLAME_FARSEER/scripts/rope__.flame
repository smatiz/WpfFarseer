#!flame/0/--
--CSharpExec
using System.Linq;
using FarseerPhysics;
using FarseerPhysics.Dynamics;
using FarseerPhysics.Dynamics.Joints;
using FarseerPhysics.Factories;
using Microsoft.Xna.Framework;
using FarseerPhysics.Common;
using FarseerPhysics.Collision.Shapes;
using FarseerPhysics.Samples.Demos.Prefabs;

using System.Collections.Generic;



--CSharpExec
Body b1, b2, HiddenBody;
float Density = 1;
Border _border;
void clear()
{
	World.Clear();
	World.Gravity = Vector2.Zero;
	//_border = new Border(World, ScreenManager, Camera);
	HiddenBody = BodyFactory.CreateBody(World, Vector2.Zero);
	b1 = BodyFactory.CreateCircle(World, 1, Density);
	b1.BodyType = BodyType.Dynamic;
	b2 = BodyFactory.CreateCircle(World, 1, Density);
	b2.BodyType = BodyType.Dynamic;
	b2.Position = b1.Position + new Vector2(4, 0);
}
--CSharpExec
clear();

private List<Body> _ropeBodies;
List<RevoluteJoint> _ropeJoints;


const int PieceCount = 35;

var p1 = new Vector2(-10f, -10f);
var p2 = new Vector2(-10f, 8f);
var dl = (p2 - p1).Length() / (2f * PieceCount);// 0.5f;
var ropeThickness = 0.1f;


Path ropePath = new Path();
ropePath.Add(p1);
ropePath.Add(p2);
ropePath.Closed = false;

Vertices box = PolygonTools.CreateRectangle(ropeThickness, dl);
PolygonShape shape = new PolygonShape(box, PieceCount);

_ropeBodies = PathManager.EvenlyDistributeShapesAlongPath(World, ropePath, shape, BodyType.Dynamic, PieceCount);
_ropeJoints = PathManager.AttachBodiesWithRevoluteJoint(World, _ropeBodies, new Vector2(0f, -dl - 0.01f), new Vector2(0f, dl + 0.01f), false, true);

foreach( var b in _ropeBodies)
{
	b.CollisionGroup = -1;
}



var motor = JointFactory.CreateMotorJoint(World, _ropeBodies[0], b1); 
//motor.LinearOffset = new Vector2(10,10);
//motor.AngularOffset = 1;
motor.MaxForce= 10;
//motor.MaxTorque = 100;
--CSharpExec

--CSharpExec
foreach( var b in _ropeBodies)
{
	b.CollisionGroup = -1;
}
--CSharpExec
_carrucolaRightRot.Friction = 1;
--CSharpExec

--CSharpExec

